#import <Cocoa/Cocoa.h>

@interface OakTextView : NSView <NSTextInput>
+ (void)initialize;
- (void)undo:(id)fp8;
- (void)redo:(id)fp8;
- (void)toggleMacroRecording:(id)fp8;
- (void)recordMacroCommand:(SEL)fp8 argument:(id)fp12;
- (void)playMacroWithOptions:(id)fp8;
- (void)abortMacroRecording:(id)fp8;
- (id)toggleMacroRecordingMenuTitle;
- (BOOL)canAbortMacroRecording;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)applicationDidBecomeActiveNotification:(id)fp8;
- (void)userDefaultsDidChange:(id)fp8;
- (void)viewWillMoveToWindow:(id)fp8;
- (struct _NSRect)caretRefreshRectangle;
- (void)setSelectionNeedsDisplay:(BOOL)fp8;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (BOOL)canBecomeKeyView;
- (BOOL)acceptsFirstResponder;
- (BOOL)resignFirstResponder;
- (id)document;
- (BOOL)becomeFirstResponder;
- (void)windowDidChangeKeyStatus:(id)fp8;
- (void)snapshotMetaData;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)setDocument:(id)fp8;
- (void)myScrollRectToVisible:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (id)performSelector:(SEL)fp8 withObject:(id)fp12;
- (BOOL)tryToPerform:(SEL)fp8 with:(id)fp12;
- (BOOL)respondsToSelector:(SEL)fp8;
- (void)keyDown:(id)fp8;
- (BOOL)hasMarkedText;
- (struct _NSRange)markedRange;
- (struct _NSRange)selectedRange;
- (id)validAttributesForMarkedText;
- (struct _NSRect)firstRectForCharacterRange:(struct _NSRange)fp8;
- (long)conversationIdentifier;
- (unsigned int)characterIndexForPoint:(struct _NSPoint)fp8;
- (id)attributedSubstringFromRange:(struct _NSRange)fp8;
- (void)doCommandBySelector:(SEL)fp8;
- (void)setMarkedText:(id)fp8 selectedRange:(struct _NSRange)fp12;
- (void)unmarkText;
- (void)insertText:(id)fp8;
- (void)pasteFromHistory:(id)fp8;
- (void)deleteBackward:(id)fp8;
- (void)deleteForward:(id)fp8;
- (void)deleteToEndOfParagraph:(id)fp8;
- (void)flagsChanged:(id)fp8;
- (void)centerSelectionInVisibleArea:(id)fp8;
- (void)setFont:(id)fp8;
- (void)makeTextLarger:(id)fp8;
- (void)makeTextSmaller:(id)fp8;
- (BOOL)canMakeFontBigger;
- (BOOL)canMakeFontSmaller;
- (BOOL)hasSelection;
- (unsigned long)internalReplaceAll:(id)fp8 error:(id *)fp12;
- (void)replaceAll:(id)fp8;
- (void)replaceAllInSelection:(id)fp8;
- (id)findWithOptions:(id)fp8;
- (id)validRequestorForSendType:(id)fp8 returnType:(id)fp12;
- (BOOL)writeSelectionToPasteboard:(id)fp8 types:(id)fp12;
- (BOOL)readSelectionFromPasteboard:(id)fp8;
- (void)setupBlinkCaretTimer;
- (void)blinkCaret:(id)fp8;
- (void)showCaret;
- (void)centerCaretInDisplay:(id)fp8;
- (struct pos)eventPosition:(id)fp8;
- (void)changeToDragPointer:(id)fp8;
- (void)resetCursorRects;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)fp8;
- (int)dragDelay;
- (void)rightMouseDown:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)mouseUp:(id)fp8;
- (void)startDragForEvent:(id)fp8;
- (void)autoscrollTimerFired:(id)fp8;
- (void)mouseDragged:(id)fp8;
- (void)scrollViewByX:(float)fp8 byY:(long)fp12;
- (void)scrollLineUp:(id)fp8;
- (void)scrollLineDown:(id)fp8;
- (void)scrollColumnLeft:(id)fp8;
- (void)scrollColumnRight:(id)fp8;
- (void)setHasDragInside:(BOOL)fp8;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (unsigned int)dragOperationForInfo:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (void)changeSpelling:(id)fp8;
- (void)movePageUp:(id)fp8;
- (void)movePageDown:(id)fp8;
- (void)movePageUpAndModifySelection:(id)fp8;
- (void)movePageDownAndModifySelection:(id)fp8;
- (BOOL)canReopenWithEncoding;
- (BOOL)reopenWithEncodingIsChecked:(id)fp8;
- (void)reopenWithEncoding:(id)fp8;
- (void)fillSelectionWithString:(id)fp8;
- (void)performFillSelectionWithAction:(id)fp8;
- (void)fillSelectionWith:(id)fp8;
- (void)recalcFrameSize;
- (void)setFrame:(struct _NSRect)fp8;
- (void)updateScreenWidth;
- (void)scrollPageUp:(id)fp8;
- (void)scrollPageDown:(id)fp8;
- (void)scrollToBeginningOfDocument:(id)fp8;
- (void)scrollToEndOfDocument:(id)fp8;
- (id)stringValue;
- (id)currentMode;
- (void)setCurrentMode:(id)fp8;
- (id)_getOakTextViewInstance:(id)fp8;

@end


@interface OakProjectController : NSWindowController
{
    id tabBarView;
    id textView;
    id statusBar;
    NSDrawer *groupsAndFilesDrawer;
    NSOutlineView *outlineView;
    NSImageView *imageView;
    NSColor *backgroundColor;
    NSWindow *newFileSheet;
    NSPopUpButton *newFileTemplatePopupButton;
    NSString *newFileSheetFilename;
    NSString *newFileSheetDirectory;
    int newFileCurrentTemplateTag;
    NSString *projectDirectory;
    NSString *filename;
    NSMutableArray *rootItems;
    NSMutableDictionary *currentDocument;
    NSSet *allFilenames;
    NSMutableDictionary *fileMetaData;
    NSMutableArray *projectVariables;
    BOOL showTabBarView;
    BOOL showStatusBarView;
    BOOL canOpenInformationPanel;
    BOOL isScratchProject;
    unsigned int untitledCount;
    BOOL snapshotFrame;
    NSArray *itemsBeingDragged;
    NSMutableDictionary *bindingProxy;
    NSMutableArray *observingItems;
    id fileChooser;
    BOOL boldFolders;
}

+ (void)initialize;
+ (BOOL)canOpenFile:(id)fp8;
- (id)init;
- (id)initWithContentsOfFile:(id)fp8;
- (void)prepareToDisposeItems:(id)fp8;
- (void)dealloc;
- (void)applicationWillTerminate:(id)fp8;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (BOOL)isItemChanged:(id)fp8;
- (void)applicationDidBecomeActiveNotification:(id)fp8;
- (id)textView;
- (id)documentForItem:(id)fp8;
- (id)filename;
- (id)projectDirectory;
- (void)setProjectDirectory:(id)fp8;
- (void)setFilename:(id)fp8;
- (void)setIsScratchProject:(BOOL)fp8;
- (id)displayName;
- (id)windowTitle;
- (void)layoutWindow;
- (void)toggleShowTabBarView:(id)fp8;
- (void)toggleShowStatusBarView:(id)fp8;
- (id)toggleShowTabBarViewMenuTitle;
- (id)toggleShowStatusBarViewMenuTitle;
- (void)openProjectDrawer:(id)fp8;
- (void)windowDidLoad;
- (void)windowDidResize:(id)fp8;
- (void)windowDidMove:(id)fp8;
- (void)setCloseTabActionAsPrimary:(BOOL)fp8;
- (void)tabBarView:(id)fp8 didOpenTab:(id)fp12;
- (void)tabBarView:(id)fp8 didCloseTab:(id)fp12;
- (void)windowDidChangeKey:(id)fp8;
- (void)setCurrentDocument:(id)fp8;
- (void)tabBarView:(id)fp8 didSelectTab:(id)fp12;
- (void)selectItem:(id)fp8;
- (id)itemWithPath:(id)fp8;
- (void)performCloseTab:(id)fp8;
- (void)performCloseAllTabs:(id)fp8;
- (BOOL)tabBarView:(id)fp8 shouldCloseTab:(id)fp12;
- (void)saveProject:(id)fp8;
- (void)saveProjectAs:(id)fp8;
- (void)saveProjectPanelDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (id)mutableDocumentTreeForItems:(id)fp8;
- (id)savableDocumentTreeForItems:(id)fp8 inDirectory:(id)fp12;
- (BOOL)writeToFile:(id)fp8;
- (void)insertItems:(id)fp8 before:(id)fp12;
- (void)insertItemsBeforeSelection:(id)fp8;
- (void)setNewFileCurrentTemplateTag:(int)fp8;
- (void)projectNewFile:(id)fp8;
- (void)newFileSheetPopUpDidChange:(id)fp8;
- (void)performNewFileSheetAction:(id)fp8;
- (void)projectAddFiles:(id)fp8;
- (BOOL)panel:(id)fp8 shouldShowFilename:(id)fp12;
- (void)addFilesPanelDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)projectNewGroup:(id)fp8;
- (void)projectGroupFiles:(id)fp8;
- (BOOL)selectedRowsShouldBeRemovedInOutlineView:(id)fp8;
- (void)projectRemoveFiles:(id)fp8;
- (void)removeProjectFilesWarningDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)userDefaultsDidChange:(id)fp8;
- (int)outlineView:(id)fp8 numberOfChildrenOfItem:(id)fp12;
- (id)outlineView:(id)fp8 child:(int)fp12 ofItem:(id)fp16;
- (BOOL)outlineView:(id)fp8 isItemExpandable:(id)fp12;
- (void)outlineView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 item:(id)fp20;
- (id)outlineView:(id)fp8 objectValueForTableColumn:(id)fp12 byItem:(id)fp16;
- (void)outlineView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 byItem:(id)fp20;
- (void)singleClickItem:(id)fp8;
- (void)doubleClickItem:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)goToNextFile:(id)fp8;
- (void)goToPreviousFile:(id)fp8;
- (void)goToFileCounterpart:(id)fp8;
- (void)revealInProject:(id)fp8;
- (BOOL)respondsToSelector:(SEL)fp8;
- (id)performSelector:(SEL)fp8;
- (id)performSelector:(SEL)fp8 withObject:(id)fp12;
- (id)_getOakTextViewInstance:(id)fp8;
- (BOOL)outlineView:(id)fp8 writeItems:(id)fp12 toPasteboard:(id)fp16;
- (unsigned int)outlineView:(id)fp8 validateDrop:(id)fp12 proposedItem:(id)fp16 proposedChildIndex:(int)fp20;
- (id)addFiles:(id)fp8 toArray:(id)fp12 atIndex:(int)fp16;
- (id)addFiles:(id)fp8 toArray:(id)fp12 atIndex:(int)fp16 fileFilter:(id)fp20 folderFilter:(id)fp24;
- (BOOL)outlineView:(id)fp8 acceptDrop:(id)fp12 item:(id)fp16 childIndex:(int)fp20;
- (void)saveDocument:(id)fp8;
- (void)saveDocumentAs:(id)fp8;
- (void)saveDocumentPanelDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (BOOL)saveAllDocuments:(id)fp8;
- (void)applicationWillResignActiveNotification:(id)fp8;
- (void)openFileInNewWindow:(id)fp8;
- (void)revealFileInFinder:(id)fp8;
- (void)openFileWithFinder:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (unsigned int)numberOfModifiedDocuments;
- (BOOL)isDocumentEdited;
- (BOOL)windowShouldClose:(id)fp8;
- (void)askToSaveProjectAndCallBack:(id)fp8;
- (void)saveProjectWarningDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (void)askToSaveModifiedDocumentsAndCallBack:(id)fp8;
- (void)saveModifiedDocumentsWarningDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (void)askToSaveAndCallBack:(id)fp8;
- (void)closeWindow:(id)fp8 andCallStack:(id)fp12;
- (id)resultForMatchInLine:(id)fp8 fromLine:(unsigned long)fp12 fromColumn:(unsigned long)fp16 toLine:(unsigned long)fp20 toColumn:(unsigned long)fp24 memento:(unsigned long)fp28 fileInfo:(id)fp32;
- (id)findString:(id)fp8 inDocument:(id)fp12 withOptions:(id)fp16;
- (id)findInProjectWithOptions:(id)fp8;
- (void)selectFindInProjectResult:(id)fp8;
- (BOOL)textView:(id)fp8 willExecuteCommand:(id)fp12;
- (void)harvestItemsForArray:(id)fp8 foldersInto:(id)fp12 andFilesInto:(id)fp16;
- (id)findProjectDirectory;
- (id)environmentVariables;
- (void)selectCommandResult:(id)fp8;
- (void)toggleGroupsAndFilesDrawer:(id)fp8;
- (void)outlineViewSelectionDidChange:(id)fp8;
- (void)projectShowInformationPanel:(id)fp8;
- (void)toggleTreatFileAsText:(id)fp8;
- (void)goToFile:(id)fp8;
- (id)openFiles:(id)fp8;

@end


@interface OakTextView (Extension)
+ (void)load;
+ (void)populateWrapColumnMenu:(id)fp8;
- (void)selectFollowingKeyView:(id)fp8;
- (void)selectPrecedingKeyView:(id)fp8;
- (BOOL)takeRightMarginFromIsChecked:(id)fp8;
- (void)setContinuousSpellCheckingEnabled:(BOOL)fp8;
- (void)setExpandSnippetsOnTab:(BOOL)fp8;
- (void)setSoftWrap:(BOOL)fp8;
- (void)setFreehandedEdit:(BOOL)fp8;
- (void)setTabSize:(unsigned long)fp8;
- (void)setRightMargin:(unsigned long)fp8;
- (void)setOverwriteMode:(BOOL)fp8;
- (void)setOpenFilesFolded:(BOOL)fp8;
- (void)setShowSoftWrapInGutter:(BOOL)fp8;
- (void)setShowBookmarksInGutter:(BOOL)fp8;
- (unsigned long)tabSize;
- (BOOL)freehandedEdit;
- (void)toggleFreehandedEdit:(id)fp8;
- (BOOL)isContinuousSpellCheckingEnabled;
- (void)toggleContinuousSpellChecking:(id)fp8;
- (BOOL)toggleContinuousSpellCheckingIsChecked:(id)fp8;
- (BOOL)expandSnippetsOnTab;
- (void)toggleExpandSnippetsOnTab:(id)fp8;
- (BOOL)toggleExpandSnippetsOnTabIsChecked:(id)fp8;
- (BOOL)canToggleHardWrap;
- (BOOL)overwriteMode;
- (void)toggleOverwriteMode:(id)fp8;
- (BOOL)softWrap;
- (void)toggleSoftWrap:(id)fp8;
- (BOOL)autoIndent;
- (BOOL)hardWrap;
- (BOOL)indentedPaste;
- (void)setAutoIndent:(BOOL)fp8;
- (void)setHardWrap:(BOOL)fp8;
- (void)setIndentedPaste:(BOOL)fp8;
- (void)toggleAutoIndent:(id)fp8;
- (void)toggleHardWrap:(id)fp8;
- (void)toggleIndentedPaste:(id)fp8;
- (BOOL)openFilesFolded;
- (void)toggleOpenFilesFolded:(id)fp8;
- (BOOL)toggleOpenFilesFoldedIsChecked:(id)fp8;
- (BOOL)canToggleOpenFilesFolded;
- (BOOL)showSoftWrapInGutter;
- (void)toggleShowSoftWrapInGutter:(id)fp8;
- (BOOL)toggleShowSoftWrapInGutterIsChecked:(id)fp8;
- (BOOL)showBookmarksInGutter;
- (void)toggleShowBookmarksInGutter:(id)fp8;
- (BOOL)toggleShowBookmarksInGutterIsChecked:(id)fp8;
- (void)takeTabSizeFrom:(id)fp8;
- (BOOL)takeTabSizeFromIsChecked:(id)fp8;
- (void)takeRightMarginFrom:(id)fp8;
- (void)insertNewline:(id)fp8;
- (void)setSoftTabs:(BOOL)fp8;
- (BOOL)softTabs;
- (BOOL)treatsSpacesAsTabs;
- (void)setSmartTyping:(BOOL)fp8;
- (BOOL)smartTyping;
- (void)toggleSmartTyping:(id)fp8;
- (void)setAntiAliasEnabled:(BOOL)fp8;
- (BOOL)antiAliasEnabled;
- (void)toggleAntiAliasEnabled:(id)fp8;
- (void)setLineNumbers:(BOOL)fp8;
- (BOOL)lineNumbers;
- (void)toggleLineNumbers:(id)fp8;
- (void)insertTab:(id)fp8;
- (void)goToLineNumber:(id)fp8;
- (void)goToColumnNumber:(id)fp8;
- (void)selectToLine:(id)fp8 andColumn:(id)fp12;
- (void)setFoldingsEnabled:(BOOL)fp8;
- (BOOL)foldingsEnabled;
- (void)toggleFoldingsEnabled:(id)fp8;
- (id)toggleFoldingMenuTitle;
- (BOOL)canToggleFolding;
- (BOOL)canFoldAllAtLevel;
- (BOOL)canUnfoldAllAtLevel;
- (void)foldAllAtLevel:(id)fp8;
- (void)foldSelection:(id)fp8;
- (void)toggleFolding:(id)fp8;
- (BOOL)toggleFreehandedEditIsChecked:(id)fp8;
- (BOOL)toggleOverwriteModeIsChecked:(id)fp8;
- (BOOL)toggleSoftWrapIsChecked:(id)fp8;
- (BOOL)toggleTreatsSpacesAsTabsIsChecked:(id)fp8;
- (BOOL)toggleSmartTypingIsChecked:(id)fp8;
- (BOOL)toggleFoldingsEnabledIsChecked:(id)fp8;
- (BOOL)toggleHardWrapIsChecked:(id)fp8;
- (BOOL)toggleIndentedPasteIsChecked:(id)fp8;
- (BOOL)toggleLineNumbersIsChecked:(id)fp8;
- (BOOL)toggleAntiAliasEnabledIsChecked:(id)fp8;
- (void)selectBlock:(id)fp8;
- (BOOL)canNextCompletion;
- (BOOL)canPreviousCompletion;
@end


@interface AppDelegate : NSObject

+ (void)initialize;
- (void)applicationWillFinishLaunching:(id)fp8;
- (void)applicationDidFinishLaunching:(id)fp8;
- (void)showExtendedTerminalUsageHelp:(id)fp8;
- (void)readPrefs:(id)fp8;
- (int)orderFrontRegistrationPanel:(id)fp8;
- (void)orderFrontPreferences:(id)fp8;
- (void)orderFrontPasteboardPanel:(id)fp8;
- (void)newProject:(id)fp8;
- (void)newDocument:(id)fp8;
- (void)workaroundHideBug:(id)fp8;
- (id)collectAuxiliaryInfo;
- (id)bundlePaths;
- (void)openDocument:(id)fp8;
- (BOOL)panel:(id)fp8 shouldShowFilename:(id)fp12;
- (BOOL)applicationOpenUntitledFile:(id)fp8;
- (BOOL)applicationShouldHandleReopen:(id)fp8 hasVisibleWindows:(BOOL)fp12;
- (BOOL)applicationShouldOpenUntitledFile:(id)fp8;
- (void)application:(id)fp8 openFiles:(id)fp12;
- (BOOL)application:(id)fp8 openFile:(id)fp12;
- (void)sendFeedback:(id)fp8;
- (void)orderFrontFindPanel:(id)fp8;
- (void)orderFrontFindInProjectPanel:(id)fp8;
- (void)executeCommand:(id)fp8;
- (void)rememberDocumentFiles:(id)fp8;
- (void)didCloseWindow:(id)fp8 callStack:(id)fp12;
- (int)applicationShouldTerminate:(id)fp8;
- (BOOL)application:(id)fp8 delegateHandlesKey:(id)fp12;
- (id)orderedDocuments;
- (unsigned long)registerUntitledDocument;
- (void)unregisterUntitledDocument:(unsigned long)fp8;
- (unsigned long)registerUntitledProject;
- (void)unregisterUntitledProject:(unsigned long)fp8;
- (void)orderFrontGoToLinePanel:(id)fp8;
- (void)goToLineAction:(id)fp8;
- (void)orderFrontReleaseNotes:(id)fp8;
- (void)goToSupportPage:(id)fp8;
- (void)selectFileAtTabIndex:(id)fp8;
- (void)menuNeedsUpdate:(id)fp8;
- (id)supportPath;
- (id)environmentVariables;

@end


@interface OakFontsAndColorsController : NSObject
{
    NSWindow *preferencesWindow;
    NSPopUpButton *themePopUpButton;
    NSTableView *settingsTableView;
    NSPanel *themeListSheet;
    NSTableView *themesTableView;
    NSTextField *themeCommentTextField;
    NSColor *foregroundColor;
    NSColor *backgroundColor;
    NSColor *selectionColor;
    NSColor *caretColor;
    NSColor *lineHighlightColor;
    NSColor *invisiblesColor;
    NSMutableArray *settingsArray;
    id selection;
    NSObjectController *themeObjectController;
    id selectedTheme;
    NSMutableArray *themesArray;
    unsigned int disableThemeBroadcasting;
    BOOL isDirty;
    BOOL isEditingColorCell;
    int colorCellRow;
    NSString *colorCellIdentifier;
    BOOL didInitialize;
}

+ (id)sharedInstance;
- (id)init;
- (void)setDirty:(BOOL)fp8;
- (id)pathForNewFile:(id)fp8 inDirectory:(id)fp12;
- (BOOL)saveTheme:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)broadcastNewTheme;
- (id)selectableScopes;
- (id)font;
- (void)didChangeFont:(id)fp8;
- (void)deactivate;
- (void)didChangeColorPanel:(id)fp8;
- (void)didCloseColorPanel:(id)fp8;
- (void)populateThemePopUp;
- (void)awakeFromNib;
- (void)singleClick:(id)fp8;
- (void)addSetting:(id)fp8;
- (void)removeSetting:(id)fp8;
- (void)acceptThemeListChanges:(id)fp8;
- (void)cancelThemeListChanges:(id)fp8;
- (void)orderOutThemeList;
- (void)themeDidChange;
- (void)changeTheme:(id)fp8;
- (void)addTheme:(id)fp8;
- (void)duplicateTheme:(id)fp8;
- (void)removeTheme:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (BOOL)tableView:(id)fp8 writeRowsWithIndexes:(id)fp12 toPasteboard:(id)fp16;
- (unsigned int)tableView:(id)fp8 validateDrop:(id)fp12 proposedRow:(int)fp16 proposedDropOperation:(int)fp20;
- (BOOL)tableView:(id)fp8 acceptDrop:(id)fp12 row:(int)fp16 dropOperation:(int)fp20;
- (void)reloadData:(id)fp8;
- (void)tableViewSelectionDidChange:(id)fp8;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)setValue:(id)fp8 forKey:(id)fp12;
- (void)setValue:(id)fp8 forKeyPath:(id)fp12;
- (void)installTheme:(id)fp8;

@end

#define OakFontsAndColorsController objc_getClass("OakFontsAndColorsController")

